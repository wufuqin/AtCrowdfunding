<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.atcrowdfunding.manager.dao.UserMapper">

	<!-- 用户维护模块的mapper映射文件 -->

	<!-- 封装结果集 -->
	<resultMap id="BaseResultMap" type="com.atguigu.atcrowdfunding.bean.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="loginacct" property="loginacct" jdbcType="VARCHAR" />
		<result column="userpswd" property="userpswd" jdbcType="CHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="createtime" property="createtime" jdbcType="CHAR" />
	</resultMap>

	<!-- 根据id删除 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete
		from t_user
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<!-- 添加用户 -->
	<insert id="insert" parameterType="com.atguigu.atcrowdfunding.bean.User">
		insert
		into t_user (id,loginacct, userpswd,username, email, createtime)
		values
		(#{id,jdbcType=INTEGER},
		 #{loginacct,jdbcType=VARCHAR},
		 #{userpswd,jdbcType=CHAR},
		 #{username,jdbcType=VARCHAR},
		 #{email,jdbcType=VARCHAR},
		 #{createtime,jdbcType=CHAR})
	</insert>

	<!-- 根据id修改 -->
	<update id="updateByPrimaryKey" parameterType="com.atguigu.atcrowdfunding.bean.User">
		update t_user
		set
			loginacct = #{loginacct,jdbcType=VARCHAR},
			userpswd =#{userpswd,jdbcType=CHAR},
			username = #{username,jdbcType=VARCHAR},
			email = #{email,jdbcType=VARCHAR},
			createtime =#{createtime,jdbcType=CHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 根据id查询 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select id, loginacct, userpswd, username, email, createtime
		from t_user
		where id = #{id,jdbcType=INTEGER}
	</select>

	<!-- 查询所有 -->
	<select id="selectAll" resultMap="BaseResultMap">
		select id, loginacct, userpswd, username, email, createtime
		from t_user
	</select>

	<!-- 查询用户数据，用于登录校验 -->
	<select id="queryUserLogin" parameterType="map" resultMap="BaseResultMap">
		select id, loginacct, userpswd, username, email, createtime
		from t_user
		where loginacct=#{loginacct} and userpswd=#{userpswd}
	</select>

	<!-- 查询分页数据 -->
	<select id="queryList" resultMap="BaseResultMap">
		select id, loginacct, userpswd, username, email, createtime
		from t_user
		limit #{startIndex},#{pagesize}
	</select>

	<!-- 查询总的记录条数 -->
	<select id="queryCount"  resultType="int">
		select count(*)
		from t_user
	</select>

	<!-- 查询分页数据 -->
	<select id="queryListLike" resultMap="BaseResultMap">
		select id, loginacct, userpswd, username, email, createtime
		from t_user
		<where>
			<if test="queryText != null">loginacct like '%${queryText}%'</if>
		</where>
		limit #{startIndex},#{pagesize}
	</select>

	<!-- 查询总的记录条数 -->
	<select id="queryCountLike"  resultType="int">
		select count(*)
		from t_user
		<where>
			<if test="queryText != null">loginacct like '%${queryText}%'</if>
		</where>
	</select>



</mapper>



















